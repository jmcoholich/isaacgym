params:
  seed: 1

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic
    separate: False

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0. # std = 1.
        fixed_sigma: True

    # cnn: # Note: I have broken the original cnn implementation of rl_games
    #   # img_height: 128
    #   # img_width: 128
    #   num_channels: 1
    #   # proprioception_size: 57
    #   type: conv2d
    #   activation: elu
    #   initializer:
    #     name: default
    #   regularizer:
    #     name: 'None'
    #   convs:
    #     - filters: 64
    #       kernel_size: 3
    #       strides: 1
    #       padding: 0
    #     - filters: 64
    #       kernel_size: 3
    #       strides: 1
    #       padding: 0
    #     - filters: 64
    #       kernel_size: 3
    #       strides: 1
    #       padding: 0
    #     - filters: 64
    #       kernel_size: 2
    #       strides: 1
    #       padding: 0
    #     # - filters: 64
    #     #   kernel_size: 1
    #     #   strides: 1
    #     #   padding: 0
    #     # - filters: 32
    #     #   kernel_size: 1
    #     #   strides: 1
    #     #   padding: 0

    mlp:
      units: [256, 256]
      activation: elu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

    # rnn:
    #   name: lstm
    #   units: 64
    #   layers: 1
    #   before_mlp: False

  load_checkpoint: False
  load_path: nn/Aliengo.pth


  config:
    name: Aliengo
    env_name: rlgpu
    ppo: True
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    reward_shaper:
      scale_value: 1.0
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    e_clip: 0.2
    entropy_coef: 0.000
    learning_rate: 5.e-5 # overwritten by adaptive lr_schedule
    # learning_rate: 1.e-4 # overwritten by adaptive lr_schedule
    lr_schedule: fixed
    lr_threshold: 0.01 # target kl for adaptive lr
    truncate_grads: True
    grad_norm: 1.
    steps_num: 1 #600 # 240 # this has to be geq seq_length
    minibatch_size: 10000 # 24000
    mini_epochs: 8
    critic_coef: 2
    clip_value: True
    seq_length: 6 # only for rnn
    bounds_loss_coef: 0.

    max_epochs: 100000000000000000000000000
    # save_best_after: 20
    score_to_win: 20000000000000000000000
    save_frequency: 50
    print_stats: True
    wandb_log_inverval: 10
